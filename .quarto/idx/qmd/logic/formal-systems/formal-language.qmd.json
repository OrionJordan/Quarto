{"title":"Formal languages","markdown":{"yaml":{"title":"Formal languages","format":{"html":{"toc":true,"html-math-method":"katex"}}},"headingText":"Definition","containsRefs":false,"markdown":"\n\nTo begin with constructing a formal system, we need to first need to know what symbols our logic will be using, and how to connect them. These properties are given by a [**formal language**]{style=\"color: blue\"}.\n\n[**Symbols**]{style=\"color: blue\"}, are individual elements used in a language. These symbols concatenate to form [**formulas**]{style=\"color: blue\"} (sometimes called *words* or *sentences*). The collection of all symbols and formulas in a language, is called an [**alphabet**]{style=\"color: blue\"}.\n\nA formal language is often given a *syntax*, rules for how symbols can be combined. If a formula can be constructed using the syntax attributed to the language, it is called a [**well-formed formula**]{style=\"color: blue\"}, often abbreviated *wff*.\n\nWith these definitions, we define a\n\n::: {.callout-note icon=\"false\"}\n\nA formal language $\\mathcal{L}$ over an alphabet $A$ is a subset of $A$ consisting of all well-formed formula, as defined by some syntax.\n:::\n\n::: {.callout-warning icon=\"false\" collapse=\"false\"}\n## Example\n\nIn order to get more familiar with formal languages, lets turn English into an (in)formal language.\n\nWe start by defining the symbols in English\n\n-   **Letters -** The 26 letters in the Latin Alphabet\n\n-   **Punctuation -** Punctation marks like ?, !, and hyphens. (Many more not included)\n\nThese symbols can be concatenated to form sentences, such as\n\n$$\n\\text{\"The quick brown fox jumped over the lazy dog\".}\n$$\n\nBut without a proper syntax, we would also get sentences like\n\n$$\n\\text{\"dwahaiyw.dwa??!dawiuh\".}\n$$\n\nTo prevent this, we'll have our syntax be the rules of English grammar. This gives us a vocabulary, nouns and verbs, and all that good stuff. We can still, however, construct nonsense sentences. For example[^1]\n\n$$\n\\text{\"Colorless green ideas sleep furiously\".}\n$$\n\nThis is a common example to show that *syntax*, the formation of formula, has nothing to do with *semantics*, the meaning or truth of a sentence.\n:::\n\n[^1]: This example was given by Noam Chomsky in his thesis [The logical structure of linguistic theory](https://en.wikipedia.org/wiki/The_Logical_Structure_of_Linguistic_Theory)\n\n## First order languages\n\nFor a more in-depth look at a formal language, lets take a dive into [**first-order language**]{style=\"color: blue\"}. I'll use the slightly obscure notation used in [Ebbinghaus, Flum, Thomas], as I personally feel they take a very formal approach to developing a formal language.\n\nThe alphabet of a first-order language has the following symbols\n\n-   **Connectives -** $\\land, \\lor, \\rightarrow, \\leftrightarrow, \\lnot$\n\n-   **Quantifiers -** $\\forall, \\exists$\n\n-   **Variables -** $v_1$,$v_2$,$v_3, \\cdots, v_n$\n\n-   **Equality -** The equal sign '$=$'\n\n-   **Parentheses -** Right $)$ and left $($.\n\n-   **Operations -** A first-order language can consist of any amount of countable operations (functions) $f$ of any order.\n\n-   **Relations -** A first-order language can consist of any amount of countable relations $p$ of any order.\n\n-   **Constants -** $c_0$, $c_1$, $c_2$ ect. A first-order language may consist of any countable amount of constants.\n\nFor readability sake, parenthesis occur in different sizes, or occasionally as brackets. Commas are also inserted to make formulas easier to read, but are not a formal symbol.\n\nThe first five groups listed are denoted $\\mathbb{A}$, and $S$ denotes the unique operations, relations, and constants in the language. The set $S$ determines the unique first-order language. We denote the shared alphabet $\\mathbb{A}_S = \\mathbb{A} \\cup S$.\n\nNow we can begin constructing the syntax for first-order languages. We start by defining terms\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\n[**S-terms**]{style=\"color: blue\"} are strings in $\\mathbb{A}_S$ which can be formed by the finite application of the following rules\n\n$(T1)$ Every variable is an $S$-term.\n\n$(T2)$ Every constant is an $S$-term.\n\n$(T3)$ If $f$ is an operator of degree $n$ in $S$, and $t_1,t_2,\\dots,t_n$ are $S$-terms, then $ft_1,t_2,\\dots,t_n$ is an $S$-term.\n:::\n\nThe set of all $S$-terms is denoted $T^S$. Through repeated applications of the three rules above, we can create larger terms. For example\n\n```{=tex}\n\\begin{alignat*}{2}\n& c_1 & \\quad &(T2)\\\\\n& v_1    &\\quad &(T1)\\\\\n& gc_1v_1   &\\quad &(T3) \\text{ with $c_1$ and $v_1$ applied to $g$}\n\\end{alignat*}\n```\nSo $gc_1v_1$ is an $S$-term. Most of the time this is wrote $g(c_1,v_1)$, but to keep things formal we'll use the objectively worse notation for now. We will however introduce shorthand later. Now that we have $S$-terms, we can start creating formulas.\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\n[**S-formulas**]{style=\"color: blue\"} are strings in $\\mathbb{A}_S$ which can be formed by the finite application of the following rules\n\n$(F1)$ If $t_1$ and $t_2$ are $S$-terms, then $t_1 = t_2$ is an $S$-formula.\n\n$(F2)$ If $p$ is a relation of degree $n$ in $S$, and $t_1,t_2,\\dots,t_n$ are $S$-terms, then $pt_1,t_2,\\dots,t_n$ is an $S$-formula.\n\n$(F3)$ If $\\phi$ is an $S$-formula, then $\\lnot\\phi$ is also an $S$-formula.\n\n$(F4)$ If $\\phi$ and $\\psi$ are $S$-formulas, then $(\\phi \\land \\psi)$, $(\\phi \\lor \\psi)$, $(\\phi \\rightarrow \\psi)$, $(\\phi \\leftrightarrow \\psi)$ are also $S$-formulas.\n\n$(F5)$ If $\\phi$ is an $S$-formula, and $x$ is a variable, then $\\forall x \\phi$ and $\\exists x \\phi$ are also $S$-formula.\n:::\n\n$S$-formula formed from $(F1)$ or $(F2)$ are known as [**atomic formula**]{style=\"color: blue\"} as they don't use any other formula in their language. Note that an $S$-formula is simply another word for a wff.\n\nWe can now introduce some new vocabulary\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nGiven the $S$-formulas (wffs) $\\phi, \\psi$ we have the following vocabulary\n\n- $\\lnot \\varphi$ is called the *negation* of $\\phi$\n- $(\\phi \\land \\psi)$ is called the *conjunction* of $\\phi$ and $\\psi$\n- $(\\phi \\lor \\psi)$ is called the *disjunction* of $\\phi$ and $\\psi$\n- $(\\phi \\rightarrow \\psi)$ is called the *implication* of $\\phi$ and $\\psi$\n- $(\\phi \\leftrightarrow \\psi)$ is called the *bi-implication* of $\\phi$ and $\\psi$\n\n:::\n\nWe denote the set of $S$-formulas with $\\mathcal{L}^S$. This set is called the first-order language associated with the symbol set $S$. And just like that we've created a first-order lanaguage! Lot's of rather tricky notation, but the overall concept is no different than our example in the beginning. \n\nIt is worht nothing that the collection of all first-order languages is denoted $\\mathcal{L}_1$, and it will be a commonly used example.","srcMarkdownNoYaml":"\n\nTo begin with constructing a formal system, we need to first need to know what symbols our logic will be using, and how to connect them. These properties are given by a [**formal language**]{style=\"color: blue\"}.\n\n[**Symbols**]{style=\"color: blue\"}, are individual elements used in a language. These symbols concatenate to form [**formulas**]{style=\"color: blue\"} (sometimes called *words* or *sentences*). The collection of all symbols and formulas in a language, is called an [**alphabet**]{style=\"color: blue\"}.\n\nA formal language is often given a *syntax*, rules for how symbols can be combined. If a formula can be constructed using the syntax attributed to the language, it is called a [**well-formed formula**]{style=\"color: blue\"}, often abbreviated *wff*.\n\nWith these definitions, we define a\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA formal language $\\mathcal{L}$ over an alphabet $A$ is a subset of $A$ consisting of all well-formed formula, as defined by some syntax.\n:::\n\n::: {.callout-warning icon=\"false\" collapse=\"false\"}\n## Example\n\nIn order to get more familiar with formal languages, lets turn English into an (in)formal language.\n\nWe start by defining the symbols in English\n\n-   **Letters -** The 26 letters in the Latin Alphabet\n\n-   **Punctuation -** Punctation marks like ?, !, and hyphens. (Many more not included)\n\nThese symbols can be concatenated to form sentences, such as\n\n$$\n\\text{\"The quick brown fox jumped over the lazy dog\".}\n$$\n\nBut without a proper syntax, we would also get sentences like\n\n$$\n\\text{\"dwahaiyw.dwa??!dawiuh\".}\n$$\n\nTo prevent this, we'll have our syntax be the rules of English grammar. This gives us a vocabulary, nouns and verbs, and all that good stuff. We can still, however, construct nonsense sentences. For example[^1]\n\n$$\n\\text{\"Colorless green ideas sleep furiously\".}\n$$\n\nThis is a common example to show that *syntax*, the formation of formula, has nothing to do with *semantics*, the meaning or truth of a sentence.\n:::\n\n[^1]: This example was given by Noam Chomsky in his thesis [The logical structure of linguistic theory](https://en.wikipedia.org/wiki/The_Logical_Structure_of_Linguistic_Theory)\n\n## First order languages\n\nFor a more in-depth look at a formal language, lets take a dive into [**first-order language**]{style=\"color: blue\"}. I'll use the slightly obscure notation used in [Ebbinghaus, Flum, Thomas], as I personally feel they take a very formal approach to developing a formal language.\n\nThe alphabet of a first-order language has the following symbols\n\n-   **Connectives -** $\\land, \\lor, \\rightarrow, \\leftrightarrow, \\lnot$\n\n-   **Quantifiers -** $\\forall, \\exists$\n\n-   **Variables -** $v_1$,$v_2$,$v_3, \\cdots, v_n$\n\n-   **Equality -** The equal sign '$=$'\n\n-   **Parentheses -** Right $)$ and left $($.\n\n-   **Operations -** A first-order language can consist of any amount of countable operations (functions) $f$ of any order.\n\n-   **Relations -** A first-order language can consist of any amount of countable relations $p$ of any order.\n\n-   **Constants -** $c_0$, $c_1$, $c_2$ ect. A first-order language may consist of any countable amount of constants.\n\nFor readability sake, parenthesis occur in different sizes, or occasionally as brackets. Commas are also inserted to make formulas easier to read, but are not a formal symbol.\n\nThe first five groups listed are denoted $\\mathbb{A}$, and $S$ denotes the unique operations, relations, and constants in the language. The set $S$ determines the unique first-order language. We denote the shared alphabet $\\mathbb{A}_S = \\mathbb{A} \\cup S$.\n\nNow we can begin constructing the syntax for first-order languages. We start by defining terms\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\n[**S-terms**]{style=\"color: blue\"} are strings in $\\mathbb{A}_S$ which can be formed by the finite application of the following rules\n\n$(T1)$ Every variable is an $S$-term.\n\n$(T2)$ Every constant is an $S$-term.\n\n$(T3)$ If $f$ is an operator of degree $n$ in $S$, and $t_1,t_2,\\dots,t_n$ are $S$-terms, then $ft_1,t_2,\\dots,t_n$ is an $S$-term.\n:::\n\nThe set of all $S$-terms is denoted $T^S$. Through repeated applications of the three rules above, we can create larger terms. For example\n\n```{=tex}\n\\begin{alignat*}{2}\n& c_1 & \\quad &(T2)\\\\\n& v_1    &\\quad &(T1)\\\\\n& gc_1v_1   &\\quad &(T3) \\text{ with $c_1$ and $v_1$ applied to $g$}\n\\end{alignat*}\n```\nSo $gc_1v_1$ is an $S$-term. Most of the time this is wrote $g(c_1,v_1)$, but to keep things formal we'll use the objectively worse notation for now. We will however introduce shorthand later. Now that we have $S$-terms, we can start creating formulas.\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\n[**S-formulas**]{style=\"color: blue\"} are strings in $\\mathbb{A}_S$ which can be formed by the finite application of the following rules\n\n$(F1)$ If $t_1$ and $t_2$ are $S$-terms, then $t_1 = t_2$ is an $S$-formula.\n\n$(F2)$ If $p$ is a relation of degree $n$ in $S$, and $t_1,t_2,\\dots,t_n$ are $S$-terms, then $pt_1,t_2,\\dots,t_n$ is an $S$-formula.\n\n$(F3)$ If $\\phi$ is an $S$-formula, then $\\lnot\\phi$ is also an $S$-formula.\n\n$(F4)$ If $\\phi$ and $\\psi$ are $S$-formulas, then $(\\phi \\land \\psi)$, $(\\phi \\lor \\psi)$, $(\\phi \\rightarrow \\psi)$, $(\\phi \\leftrightarrow \\psi)$ are also $S$-formulas.\n\n$(F5)$ If $\\phi$ is an $S$-formula, and $x$ is a variable, then $\\forall x \\phi$ and $\\exists x \\phi$ are also $S$-formula.\n:::\n\n$S$-formula formed from $(F1)$ or $(F2)$ are known as [**atomic formula**]{style=\"color: blue\"} as they don't use any other formula in their language. Note that an $S$-formula is simply another word for a wff.\n\nWe can now introduce some new vocabulary\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nGiven the $S$-formulas (wffs) $\\phi, \\psi$ we have the following vocabulary\n\n- $\\lnot \\varphi$ is called the *negation* of $\\phi$\n- $(\\phi \\land \\psi)$ is called the *conjunction* of $\\phi$ and $\\psi$\n- $(\\phi \\lor \\psi)$ is called the *disjunction* of $\\phi$ and $\\psi$\n- $(\\phi \\rightarrow \\psi)$ is called the *implication* of $\\phi$ and $\\psi$\n- $(\\phi \\leftrightarrow \\psi)$ is called the *bi-implication* of $\\phi$ and $\\psi$\n\n:::\n\nWe denote the set of $S$-formulas with $\\mathcal{L}^S$. This set is called the first-order language associated with the symbol set $S$. And just like that we've created a first-order lanaguage! Lot's of rather tricky notation, but the overall concept is no different than our example in the beginning. \n\nIt is worht nothing that the collection of all first-order languages is denoted $\\mathcal{L}_1$, and it will be a commonly used example."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"html-math-method":"katex","output-file":"formal-language.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","title":"Formal languages"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}