{
  "hash": "565db7864a172cae02e90867b431de9f",
  "result": {
    "markdown": "---\ntitle: \"Graphs\"\nformat:\n  html:\n    css: ../../../styles.css\n    echo: false\n    toc: true\n    html-math-method: katex\n---\n\n\nThis section covers the definition of a graph, and common families of graphs.\n\n# Definition\n\nA [**graph**]{style=\"color: blue\"} is a set of points called [**vertices**]{style=\"color: blue\"} connected by [**edges**]{style=\"color:blue\"}.\n\n::: {style=\"text-align:center;\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![The *Petersen Graph*, a notable graph in Graph Theory](graphs_files/figure-html/example-graph-1.png){fig-align='center' width=192}\n:::\n:::\n\n:::\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA graph $G = (V,E)$ is a mathematical structure consisting of a [**vertex set**]{style=\"color: blue\"} $V(G)$ and an [**edge set**]{style=\"color: blue\"} $E(G)$. Each edge $e$ in the edge set connects two (not necessarily distinct) vertices known as the [**endpoints**]{style=\"color: blue\"} of $e$.\n:::\n\nAn edge is said to [**join**]{style=\"color: blue\"} its endpoints. Say an edge $e$ connects two vertices $u$ and $v$. $u$ is said to be [**adjacent**]{style=\"color: blue\"} and a [**neighbor**]{style=\"color: blue\"} of $v$.\n\n::: {.callout-warning icon=\"false\"}\n## Example\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](graphs_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=96}\n:::\n:::\n\n\nThe vertex and edge sets of the graph $G$ above are\n\n$$\nV(G) = \\{a,b,c,d\\} \\quad\\quad\\quad\\quad E(G) = \\{ab,ac,ad,bc,bd,cd\\}\n$$\n\nNotice how we can denote an edge by concatenating its endpoints. This is only possible in cases where exclusively one edge exist between two vertices.\n:::\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nAn edge $e$ can be called\n\n-   A [**proper edge**]{style=\"color: blue\"} when the edge joins two distinct vertices\n\n-   A [**loop**]{style=\"color: blue\"} when $e$ joins a vertex to itself\n\n-   A [**multi-edge**]{style=\"color: blue\"} when two or more edges connect the same two vertices\n:::\n\nThere are many instances in graph theory where our graphs are both loopless and devoid of multi-edges. In these cases we call the graph [**simple**]{style=\"color: blue\"}. If our graph is empty, we call it a [**null graph**]{style=\"color: blue\"}. If our graph contains one vertex and no edges, the graph is [**trivial**]{style=\"color: blue\"}.\n\n## Alternate definition\n\nA more rigourous definition of a graph $G$ will include an **incidence function** $\\psi_G$ that connects vertices to edges.\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA *graph* $G$ is an ordered pair $(V(G),E(G))$ where $V(G)$ is a set of vertices and $E(G)$ is a set, disjoint from $V(G)$, of edges, along with an *incidence function* $\\psi_G$ that associates each edge in $E(G)$ an unordered pair of vertices in $V(G)$.   \n:::\n\nAn edge $e$ is said to *join* its endpoints $u,v$ if $\\psi_G(e) = \\{u,v\\}$. \n\n::: {.callout-warning icon=\"false\" collapse=\"true\"}\n## Example (Rigourous Graph)\n\nAn example of a rigourous graph $G$ is\n\n$$\nG = (V(G),E(G))\n$$\n\nwhere\n\n$$\nV(G) = \\{a,b,c,d,e\\}\\\\\nE(G) = \\{e_1,e_2,e_3,e_4,e_5,e_6,e_7,e_8\\}\n$$\n\nand $\\psi_G$ conncects\n\n$$\n\\psi_G(e_1) = \\{a,b\\}, \\psi_G(e_2) = \\{a,a\\}, \\psi_G(e_3) = \\{a,c\\}, \\psi_G(e_4) = \\{b,e\\}\\\\\n\\psi_G(e_5) = \\{b,a\\}, \\psi_G(e_6) = \\{c,b\\}, \\psi_G(e_7) = \\{d,d\\}, \\psi_G(e_8) = \\{c,e\\}\n$$\n\n\n:::\n\n# Common Families of Graphs\n\n## Complete Graphs\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA [**complete graph**]{style=\"color: blue\"} is a simple graph where there exist an edge between every pair of distinct vertices. A complete graph with $n$ vertices is notated $K_n$.\n:::\n\n(Insert picture of graphs K1 through K5)\n\n::: {.callout-note icon=\"false\"}\n## Theorem\n\nA complete graph $K_n$ contains $\\binom{n}{2}$ edges.\n:::\n\n::: {.callout-tip icon=\"false\" collapse=\"true\"}\n## Proof\n\nThe graph $K_n$ has an edge between every pair of distinct vertices. Because order doesn't affect edges ($e = uv$ is equivalent to $e = vu$), the number of edges is analougous to $n$ choose $2$, $\\binom{n}{2}$.\n:::\n\n## Bipartite Graphs\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA [**bipartite graph**]{style=\"color: blue\"} $G$ is a simple graph whose vertex set can be partitioned into two subsets $U$ and $V$, such that every edge in $G$ has one endpoint in $U$, and one edpoint in $V$.\n:::\n\n(Insert picture of a few bipartite graphs)\n\n::: {.callout-note icon=\"false\"}\n## Proposition\n\nA bipartite graph cannot contain any loops.\n:::\n\n::: {.callout-tip icon=\"false\" collapse=\"true\"}\n## Proof\n\nIf an edge was loop, it would connect the same vertex to both endpoints, which contradicts our definition of a bipartite graph.\n:::\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA [**complete bipartite graph**]{style=\"color: blue\"} $G$ is a simple bipartite graph such that every vertex in one of the bipartition subsets is joined to every other vertex in the other bipartite subset. A complete bipartite graph is notated $K_{m,n}$ where $m$ is the number of vertices in one of the graphs bipartite set, and $n$ is the number of vertices in the other.\n:::\n\n(Example of a complete bipartite graph)\n\n## Regular Graphs\n\nTo look at regular graphs, we first have to establish the *degree* of a vertex.\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nThe [**degree**]{style=\"color: blue\"} of a vertex $v$ is a positive integer equal to the number of vertices in the neighborhood of $v$.\n:::\n\n::: {.callout-note icon=\"false\"}\n## Definition\n\nA [**k-regular graph**]{style=\"color: blue\"} is a graph where each vertex has $k$ other vertices in it's neighborhood.\n:::\n\n::: {.callout-warning icon=\"false\"}\n## Example\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](graphs_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=144}\n:::\n:::\n\n\nFor example, the Petersen graph is $3$-regular, as each vertex in the graph has three other vertices in it's neighborhood.\n:::",
    "supporting": [
      "graphs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}